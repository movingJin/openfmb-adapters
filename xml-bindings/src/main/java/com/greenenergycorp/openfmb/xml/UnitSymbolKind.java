//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2016.10.27 at 02:07:42 PM EDT 
//


package com.greenenergycorp.openfmb.xml;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for UnitSymbolKind.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="UnitSymbolKind"&gt;
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string"&gt;
 *     &lt;enumeration value="Amp"/&gt;
 *     &lt;enumeration value="deg"/&gt;
 *     &lt;enumeration value="degC"/&gt;
 *     &lt;enumeration value="degF"/&gt;
 *     &lt;enumeration value="Farad"/&gt;
 *     &lt;enumeration value="gram"/&gt;
 *     &lt;enumeration value="hour"/&gt;
 *     &lt;enumeration value="Henry"/&gt;
 *     &lt;enumeration value="Hz"/&gt;
 *     &lt;enumeration value="Joule"/&gt;
 *     &lt;enumeration value="meter"/&gt;
 *     &lt;enumeration value="m2"/&gt;
 *     &lt;enumeration value="m3"/&gt;
 *     &lt;enumeration value="min"/&gt;
 *     &lt;enumeration value="mph"/&gt;
 *     &lt;enumeration value="Newton"/&gt;
 *     &lt;enumeration value="noUnit"/&gt;
 *     &lt;enumeration value="ohm"/&gt;
 *     &lt;enumeration value="Pa"/&gt;
 *     &lt;enumeration value="rad"/&gt;
 *     &lt;enumeration value="Siemens"/&gt;
 *     &lt;enumeration value="sec"/&gt;
 *     &lt;enumeration value="V"/&gt;
 *     &lt;enumeration value="VA"/&gt;
 *     &lt;enumeration value="VAh"/&gt;
 *     &lt;enumeration value="VAr"/&gt;
 *     &lt;enumeration value="VArh"/&gt;
 *     &lt;enumeration value="W"/&gt;
 *     &lt;enumeration value="Wh"/&gt;
 *     &lt;enumeration value="wPerVA"/&gt;
 *     &lt;enumeration value="WPerM2"/&gt;
 *   &lt;/restriction&gt;
 * &lt;/simpleType&gt;
 * </pre>
 * 
 */
@XmlType(name = "UnitSymbolKind")
@XmlEnum
public enum UnitSymbolKind {


    /**
     * Current in ampere.
     * 
     */
    @XmlEnumValue("Amp")
    AMP("Amp"),

    /**
     * Plane angle in degrees.
     * 
     */
    @XmlEnumValue("deg")
    DEG("deg"),

    /**
     * Relative temperature in degrees Celsius. In the SI unit system the symbol is ºC. Electric charge is measured in coulomb that has the unit symbol C. To distinguish degree Celsius form coulomb the symbol used in the UML is degC. Reason for not using ºC is the special character º is difficult to manage in software.
     * 
     */
    @XmlEnumValue("degC")
    DEG_C("degC"),

    /**
     * Relative temperature in degree fahrenheit.
     * 
     */
    @XmlEnumValue("degF")
    DEG_F("degF"),

    /**
     * Capacitance in farad.
     * 
     */
    @XmlEnumValue("Farad")
    FARAD("Farad"),

    /**
     * Mass in gram.
     * 
     */
    @XmlEnumValue("gram")
    GRAM("gram"),

    /**
     * Time in hours.
     * 
     */
    @XmlEnumValue("hour")
    HOUR("hour"),

    /**
     * Inductance in henry.
     * 
     */
    @XmlEnumValue("Henry")
    HENRY("Henry"),

    /**
     * Frequency in hertz.
     * 
     */
    @XmlEnumValue("Hz")
    HZ("Hz"),

    /**
     * Energy in joule.
     * 
     */
    @XmlEnumValue("Joule")
    JOULE("Joule"),

    /**
     * Length in meter.
     * 
     */
    @XmlEnumValue("meter")
    METER("meter"),

    /**
     * Area in square meters.
     * 
     */
    @XmlEnumValue("m2")
    M_2("m2"),

    /**
     * Volume in cubic meters.
     * 
     */
    @XmlEnumValue("m3")
    M_3("m3"),

    /**
     * Time in minutes.
     * 
     */
    @XmlEnumValue("min")
    MIN("min"),

    /**
     * Mile per hour
     * 
     */
    @XmlEnumValue("mph")
    MPH("mph"),

    /**
     * Force in newton.
     * 
     */
    @XmlEnumValue("Newton")
    NEWTON("Newton"),

    /**
     * Dimension less quantity, e.g. count, per unit, etc.
     * 
     */
    @XmlEnumValue("noUnit")
    NO_UNIT("noUnit"),

    /**
     * Resistance in ohm.
     * 
     */
    @XmlEnumValue("ohm")
    OHM("ohm"),

    /**
     * Pressure in pascal (n/m2).
     * 
     */
    @XmlEnumValue("Pa")
    PA("Pa"),

    /**
     * Plane angle in radians.
     * 
     */
    @XmlEnumValue("rad")
    RAD("rad"),

    /**
     * Conductance in siemens.
     * 
     */
    @XmlEnumValue("Siemens")
    SIEMENS("Siemens"),

    /**
     * Time in seconds.
     * 
     */
    @XmlEnumValue("sec")
    SEC("sec"),

    /**
     * Voltage in volt.
     * 
     */
    V("V"),

    /**
     * Apparent power in volt ampere.
     * 
     */
    VA("VA"),

    /**
     * Apparent energy in volt ampere hours.
     * 
     */
    @XmlEnumValue("VAh")
    V_AH("VAh"),

    /**
     * Reactive power in volt ampere reactive.
     * 
     */
    @XmlEnumValue("VAr")
    V_AR("VAr"),

    /**
     * Reactive energy in volt ampere reactive hours.
     * 
     */
    @XmlEnumValue("VArh")
    V_ARH("VArh"),

    /**
     * Active power in watt.
     * 
     */
    W("W"),

    /**
     * Real energy in what hours.
     * 
     */
    @XmlEnumValue("Wh")
    WH("Wh"),

    /**
     * Power factor
     * 
     */
    @XmlEnumValue("wPerVA")
    W_PER_VA("wPerVA"),

    /**
     * Watts per square meter
     * 
     */
    @XmlEnumValue("WPerM2")
    W_PER_M_2("WPerM2");
    private final String value;

    UnitSymbolKind(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static UnitSymbolKind fromValue(String v) {
        for (UnitSymbolKind c: UnitSymbolKind.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
